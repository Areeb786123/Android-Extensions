apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply from: "${project.rootDir}/version.gradle"

publishing {
    publications {
        lib(MavenPublication) {
            version = project.version
            groupId parent.ext.groupId
            artifactId project.getName()

            from components.java

            afterEvaluate {
                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = project.getName()
                    description = "${name} Android extensions"
                    url = 'https://github.com/tunjid/Android-Extensions'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://github.com/tunjid/tunjid/Android-Extensions/develop/license.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'tunjid'
                            name = 'Adetunji Dahunsi'
                            email = 'tjdah100@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:github.com/tunjid/Android-Extensions.git'
                        developerConnection = 'scm:git:ssh://github.com/tunjid/Android-Extensions.git'
                        url = 'https://github.com/tunjid/Android-Extensions/tree/main'
                    }
                }
            }
        }
    }
    repositories {
        parent.ext.publishRepositories.each { repo ->
            def props = (repo as ConfigObject).toProperties()
            maven {
                name = props['name']
                url = props['url']
                credentials {
                    username = props['credentials.username']
                    password = props['credentials.password']
                }
            }
        }
    }
}

// Gradle task to generate sources after building a release aar
task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

//signing {
//    sign publishing.publications.mavenJava
//}


javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
